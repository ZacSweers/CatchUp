{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "4c0070d4a1298a607033f95ab0304119",
    "entities": [
      {
        "tableName": "pages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `type` TEXT NOT NULL, `expiration` INTEGER NOT NULL, `page` TEXT NOT NULL, `sessionId` INTEGER NOT NULL, `items` TEXT NOT NULL, `nextPageToken` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expiration",
            "columnName": "expiration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "page",
            "columnName": "page",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "items",
            "columnName": "items",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nextPageToken",
            "columnName": "nextPageToken",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `score` TEXT, `tag` TEXT, `author` TEXT, `source` TEXT, `commentCount` INTEGER NOT NULL, `hideComments` INTEGER NOT NULL, `itemClickUrl` TEXT, `itemCommentClickUrl` TEXT, `value` TEXT, `type` TEXT, `url` TEXT, `animatable` INTEGER, `bestSize` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentCount",
            "columnName": "commentCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hideComments",
            "columnName": "hideComments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemClickUrl",
            "columnName": "itemClickUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "itemCommentClickUrl",
            "columnName": "itemCommentClickUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summarizationInfo.value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summarizationInfo.type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageInfo.url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageInfo.animatable",
            "columnName": "animatable",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageInfo.bestSize",
            "columnName": "bestSize",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "smmryEntries",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`url` TEXT NOT NULL, `json` TEXT NOT NULL, PRIMARY KEY(`url`))",
        "fields": [
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "json",
            "columnName": "json",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "url"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"4c0070d4a1298a607033f95ab0304119\")"
    ]
  }
}
